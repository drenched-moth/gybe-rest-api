from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.member import Member
from openapi_server import util

from openapi_server.models.member import Member  # noqa: E501

class BandComposition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, members=None):  # noqa: E501
        """BandComposition - a model defined in OpenAPI

        :param members: The members of this BandComposition.  # noqa: E501
        :type members: List[Member]
        """
        self.openapi_types = {
            'members': List[Member]
        }

        self.attribute_map = {
            'members': 'members'
        }

        self._members = members

    @classmethod
    def from_dict(cls, dikt) -> 'BandComposition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BandComposition of this BandComposition.  # noqa: E501
        :rtype: BandComposition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def members(self) -> List[Member]:
        """Gets the members of this BandComposition.


        :return: The members of this BandComposition.
        :rtype: List[Member]
        """
        return self._members

    @members.setter
    def members(self, members: List[Member]):
        """Sets the members of this BandComposition.


        :param members: The members of this BandComposition.
        :type members: List[Member]
        """
        if members is None:
            raise ValueError("Invalid value for `members`, must not be `None`")  # noqa: E501

        self._members = members
