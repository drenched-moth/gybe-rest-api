from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.song_played import SongPlayed
from openapi_server import util

from openapi_server.models.song_played import SongPlayed  # noqa: E501

class Setlist(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, songs=None):  # noqa: E501
        """Setlist - a model defined in OpenAPI

        :param songs: The songs of this Setlist.  # noqa: E501
        :type songs: List[SongPlayed]
        """
        self.openapi_types = {
            'songs': List[SongPlayed]
        }

        self.attribute_map = {
            'songs': 'songs'
        }

        self._songs = songs

    @classmethod
    def from_dict(cls, dikt) -> 'Setlist':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Setlist of this Setlist.  # noqa: E501
        :rtype: Setlist
        """
        return util.deserialize_model(dikt, cls)

    @property
    def songs(self) -> List[SongPlayed]:
        """Gets the songs of this Setlist.


        :return: The songs of this Setlist.
        :rtype: List[SongPlayed]
        """
        return self._songs

    @songs.setter
    def songs(self, songs: List[SongPlayed]):
        """Sets the songs of this Setlist.


        :param songs: The songs of this Setlist.
        :type songs: List[SongPlayed]
        """
        if songs is None:
            raise ValueError("Invalid value for `songs`, must not be `None`")  # noqa: E501

        self._songs = songs
