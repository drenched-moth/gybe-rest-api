openapi: '3.1.0'
info:
  version: '0.1.0'
  title: 'gybe-rest-api'
  description: Rest API for all data related to godspeed you ! black emperor concerts and concerts recordings
  contact:
    name: no contact
    url: www.donotcontactme.com
    email: please@donotcontact.me

servers:
  - url: localhost:8080/v1
    description: local server

tags:
  - name: Concerts
  - name: Recordings
  - name: Songs
  - name: Members

paths:
# concerts
  /concerts:
    get:
      summary: Get concerts
      description: Get concerts
      operationId: get_concerts
      tags:
        - Concerts
      parameters:
        - name: date
          in: query
          description: The specific date of the concert (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: year
          in: query
          description: Get concerts in the specified year
          schema:
            type: integer
        - name: beforeYear
          in: query
          description: Get concerts before specified year
          schema:
            type: integer
        - name: afterYear
          in: query
          description: Get concerts after specified year
          schema:
            type: integer
        - name: venue
          in: query
          description: Get concerts that took place at specified venue
          schema:
            type: string
        - name: city
          in: query
          description: Get concerts that took place at specified city
          schema:
            type: string
        - name: state
          in: query
          description: Get concerts that took place in specified state
          schema: 
            type: string
        - name: country
          in: query
          description: Get concerts that took place in specified country
          schema:
            type: string
      responses:
        '200':
          description: All concerts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Concert'
        '400':
          description: Invalid query parameter
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /concerts/{concert_id}:
    get:
      summary: Get a specific concert
      description: Get a specific concert
      operationId: get_concert_by_id
      tags:
        - Concerts
      parameters:
        - name: concert_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The id specified concert_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concert'
        '404':
          description: No concert found  for the provided 'concert_id'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
#songs
  /songs:
    get:
      summary: Get songs
      description: Get songs
      operationId: get_songs
      tags:
        - Songs
      parameters:
        - name: matches
          in: query
          description: Aliases of given song name
          schema:
            type: string
      responses:
        '200':
          description: All songs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '400':
          description: Invalid query parameter
  /songs/{song_id}:
    get:
      summary: Get names for a specific song
      description: Get names for a specific song
      operationId: get_song_by_id
      tags:
        - Songs
      parameters:
        - name: song_id
          description: Song ID
          in: path 
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Names of the song
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '404':
          description: Song not found
# Members
  /members:
    get:
      summary: Get all members
      description: Get all members
      operationId: get_members
      tags:
        - Members
      responses:
        '200':
          description: Members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
# Recordings
  /recordings:
    get:
      summary: Get all recordings
      description: Get all recordings
      operationId: get_recordings
      tags:
        - Recordings
      parameters:
        - name: date
          in: query
          description: Get recordings at specified date
          schema:
            type: string
            format: date
        - name: year
          in: query
          description: Get recordings at specifed afterYear
          schema:
            type: integer
        - name: beforeYear
          in: query
          description: Get recordings before specified year
          schema:
            type: integer
        - name: afterYear
          in: query
          description: Get recordings after specified year
          schema:
            type: integer
        - name: venue
          in: query
          description: Get recordings that took place at specified venue
          schema:
            type: string
        - name: city
          in: query
          description: Get recordings that took place at specified city
          schema:
            type: string
        - name: state
          in: query
          description: Get recordings that took place in specified state
          schema: 
            type: string
        - name: country
          in: query
          description: Get recordings that took place in specified country
          schema:
            type: string
      responses:
        '200':
          description: Recordings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recording'
        '400':
          description: Invalid query parameter
  /recordings/{recording_id}:
    get:
      summary: Get a specific recording
      description: Get a specific recording
      operationId: get_recordings_by_id
      tags:
        - Recordings
      parameters:
        - name: recording_id
          in: path 
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Specified recording_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recording'
        '404':
          description: No recordings found for the provided 'recording_id'

  /concerts/{concert_id}/recordings:
    get:
      summary: Get recordings of a specific concert
      description: Get recordings of a specific concert
      operationId: get_recordings_by_concert_id
      tags:
        - Recordings
      parameters:
        - name: concert_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Recordings of specified concert
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Concert'
        '404':
          description: No concert found for the provided 'concert_id'
  /concerts/{concert_id}/members:
    get:
      summary: Get the band composition at a specific concert
      description: Get the band composition at a specific concert
      operationId: get_members_by_concert_id
      tags:
        - Members
      parameters:
        - name: concert_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Band composition of specified concert
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '404':
          description: No concert found for the provided 'concert_id'
  /concerts/{concert_id}/songs:
    get:
      summary: Get played songs at a specific concert
      description: Get played songs at a specific concert
      operationId: get_songs_by_concert_id
      tags:
        - Songs
      parameters:
        - name: concert_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Songs played at specified concert
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '404':
          description: No concert found for the provided 'concert_id'
  
  /songs/{song_id}/recordings:
    get:
      summary: Get recordings where specified song can be heard
      description: Get recordings where specified song can be heard
      operationId: get_recordings_by_song_id
      tags:
        - Recordings
      parameters:
        - name: song_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Recordings where specifed song appears
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recording'
        '404':
          description: No song found for the provided 'song_id'

components:
  schemas:
    Concert:
      type: object
      required:
        - id
        - date
        - venue
        - city
        - country
      properties:
        id:
          type: integer
        date:
          type: datetime
        venue:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        extra_info:
          type: string
        notes:
          type: string
        acknowledgments:
          type: string

    Song:
      type: object
      required:
        - id
        - names
      properties:
        id:
          type: integer
        names:
          type: array
          items:
            type: string

    Member:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    
    Recording:
      type: object
      required:
        - recording_id
        - concert_id
      properties:
        recording_id:
          type: integer
        concert_id:
          type: integer
        duration:
          type: integer
        source_info:
          type: string
        url:
          type: string

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
